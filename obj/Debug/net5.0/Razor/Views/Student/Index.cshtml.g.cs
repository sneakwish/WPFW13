#pragma checksum "C:\Users\wisha\Documents\VSCodeShit\WPFW13\Views\Student\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "470c178cd3e5d09971b2a3d65b2385bb08f14349"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Student_Index), @"mvc.1.0.view", @"/Views/Student/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\wisha\Documents\VSCodeShit\WPFW13\Views\_ViewImports.cshtml"
using WPFW13;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wisha\Documents\VSCodeShit\WPFW13\Views\_ViewImports.cshtml"
using WPFW13.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"470c178cd3e5d09971b2a3d65b2385bb08f14349", @"/Views/Student/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7d1ed777f668ffa67fa717e1b19548f2e7fb013f", @"/Views/_ViewImports.cshtml")]
    public class Views_Student_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<WPFW13.Models.Student>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "470c178cd3e5d09971b2a3d65b2385bb08f143493715", async() => {
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Index</title>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "470c178cd3e5d09971b2a3d65b2385bb08f143494782", async() => {
                WriteLiteral("\r\n    <p>\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "470c178cd3e5d09971b2a3d65b2385bb08f143495059", async() => {
                    WriteLiteral("Create New");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    </p>

    <table>
        <tr>
            <th>ID</th>
            <th>Naam</th>
            <th>Leeftijd</th>
            <th>crud</th>
        </tr>
        <tbody id=""tableBody""></tbody>
    </table>
    <h4>Toevoegen:</h4>
    <label>Naam:</label>
    <input type=""text"" id=""naam""");
                BeginWriteAttribute("value", "  value=\"", 580, "\"", 589, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n    <label>leeftijd</label>\r\n    <input type=\"text\" id=\"leeftijd\"");
                BeginWriteAttribute("value", "  value=\"", 660, "\"", 669, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
    <button class=""btn btn-primary"" onclick=""addItem();"">Toevoegen</button>

    <script>
        const naam2 = document.getElementById('naam');
        const leeftijd2 = document.getElementById('leeftijd');
        function addItem() {

            const item = {
                Naam: naam2.value,
                Leeftijd: leeftijd2.value
            };

            fetch('/api/StudentControllerAPI', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(item)
            })
                .then(response => response.json()
                    .then(() => getItems()))

                .catch(error => (alert(error)));
        }

        let todos = [];

        function getItems() {
            let tBody = document.getElementById('tableBody');
            tBody.innerHTML = '';
            fetch(""/api/StudentCo");
                WriteLiteral(@"ntrollerAPI"")
                .then(response => response.json())
                .then(studenten => {
                    console.log(studenten);
                    for (let student of studenten) {

                        let idField = document.createElement('input');
                        idField.type = 'text';
                        idField.value = student.studentId;
                        idField.setAttribute('id', idField.value);


                        let naamField = document.createElement('input');
                        naamField.type = 'text';
                        naamField.value = student.naam;
                        naamField.setAttribute('id', ""naam"" + idField.value);

                        let leeftijdField = document.createElement('input');
                        leeftijdField.type = 'text';
                        leeftijdField.value = student.leeftijd;
                        leeftijdField.setAttribute('id', ""leeftijd"" + idField.value);


                ");
                WriteLiteral(@"        let tr = tBody.insertRow();

                        let td1 = tr.insertCell(0);
                        td1.appendChild(idField);

                        let td2 = tr.insertCell(1);
                        td2.appendChild(naamField);

                        let td3 = tr.insertCell(2);
                        td3.appendChild(leeftijdField);


                        let deleteKnop = document.createElement('button');
                        deleteKnop.setAttribute('id', idField.value);
                        deleteKnop.setAttribute(""onClick"", ""javascript: deleteItem("" + idField.value + "");"");
                        deleteKnop.innerText = ""Delete"";


                        let updateKnop = document.createElement('button');
                        updateKnop.setAttribute('id', idField.value);
                        updateKnop.setAttribute(""onClick"", ""javascript: updateItem("" + idField.value + "");"");

                        updateKnop.innerText = ""update"";

                 ");
                WriteLiteral(@"       let td4 = tr.insertCell(3);
                        td4.appendChild(deleteKnop);
                        td4.appendChild(updateKnop);
                    }
                })
                .catch(error => console.error('Unable to get items.', error));
        }

        function deleteItem(id) {
            fetch(""/api/StudentControllerAPI/"" + id, {
                method: 'DELETE',
            })
                .then(() => getItems())
                .catch(error => console.error('Unable to delete item.', error));
        }

        function updateItem(id) {
            const item = {
                studentId: id,
                naam: document.getElementById('naam' + id).value,
                leeftijd: document.getElementById('leeftijd' + id).value
            };
            fetch(""/api/StudentControllerAPI/"" + id, {
                method: 'PUT',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'applicatio");
                WriteLiteral(@"n/json'
                },
                body: JSON.stringify(item)
            })
                .then(() => getItems())
                .catch(error => console.error('Unable to update item.', error));
        }

    </script>
    <script>getItems();</script>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<WPFW13.Models.Student>> Html { get; private set; }
    }
}
#pragma warning restore 1591
